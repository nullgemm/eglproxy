cmake_minimum_required (VERSION 2.6)
project (eglproxy C)

list(APPEND EGLPROXY_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/inc)
find_package(OpenGL REQUIRED)
list(APPEND EGLPROXY_INCLUDE_DIRS  ${OPENGL_INCLUDE_DIR})
list(APPEND EGLPROXY_LIBRARIES ${OPENGL_gl_LIBRARY})

#Common source files
list(APPEND EGLPROXY_SOURCES ${PROJECT_SOURCE_DIR}/src/egl_proc.c)
list(APPEND EGLPROXY_SOURCES ${PROJECT_SOURCE_DIR}/src/eglproxy.c)

#Common header files
list(APPEND EGLPROXY_HEADERS ${PROJECT_SOURCE_DIR}/inc/eglproxy.h)
list(APPEND EGLPROXY_HEADERS ${PROJECT_SOURCE_DIR}/inc/EGL/egl.h)
list(APPEND EGLPROXY_HEADERS ${PROJECT_SOURCE_DIR}/inc/EGL/eglext.h)
list(APPEND EGLPROXY_HEADERS ${PROJECT_SOURCE_DIR}/inc/EGL/eglplatform.h)
list(APPEND EGLPROXY_HEADERS ${PROJECT_SOURCE_DIR}/inc/KHR/khrplatform.h)

#Build main target
if (UNIX)
    list(APPEND EGLPROXY_SOURCES ${PROJECT_SOURCE_DIR}/src/egl_glx.c)
elseif(WIN32)
    list(APPEND EGLPROXY_SOURCES ${PROJECT_SOURCE_DIR}/src/egl_wgl.c)
endif(UNIX)

include_directories(${EGLPROXY_INCLUDE_DIRS})
add_library(${PROJECT_NAME} STATIC ${EGLPROXY_SOURCES} ${EGLPROXY_HEADERS})
target_link_libraries(${PROJECT_NAME} ${EGLPROXY_LIBRARIES})
